{"version":3,"sources":["enums/enums.js","components/Typography/Typography.js","components/SearchBar/SearchBar.js","components/Location/Location.js","components/TextLine/TextLine.js","components/WeatherIcon/Icon.js","helpers/index.js","components/Card/Card.js","components/ForcastCard/ForcastCard.js","components/ForecastList/ForecastList.js","url/url.js","Api/index.js","page/HomePage.js","assets/images/homePagebj.jpg","App.js","index.js"],"names":["TypographySize","Heading","styled","h1","color","size","getSize","Typography","label","Inpout","input","Form","form","DropDwonListLi","li","DropDwonListUl","ul","SearchBar","autoComplete","placeholder","value","onChange","selectFromList","list","map","v","i","onMouseDown","LocalizedName","div","headerSize","Date","Clocation","Location","country","city","date","getFontsize","fontsize","Text","text","paddingtop","height","width","TextLine","Degrees","degree","IconWeather","img","Icon","src","Helpers","GetDate","item","type","option","month","day","weekday","hour","minute","longDate","toLocaleDateString","objectDate","time","toLocaleTimeString","GetIcon","icon","CardTemp","Container","SLowHight","SRainWind","SSetRise","Wrap","WrapTwo","Sunset","Sunrise","Low","Wind","Rain","Hight","Card","CurrentConditions","DaliyForcast","rise","DailyForecasts","Sun","Rise","slice","set","Set","WeatherIcon","Temperature","Metric","Value","WeatherText","Maximum","Minimum","Day","Speed","RainProbability","span","ForcastCard","temperatura","ForecastList","HoursfHourly12","index","DateTime","api","baseURL","endPoints","getDaliyForcast","Key","axios","get","getCurrentConditions","get12HoursfHourly","CweatherPage","WeatherPage","useState","setAutoComplete","selectValue","setselectValue","setHoursfHourly12","setCurrentConditions","setDaliyForcast","isfinished","setIsfinished","pickLoction","setpickLoction","e","a","target","result","data","Hours_fHourly","Daliy_Forcast","Conditions","Country","ID","image","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0a5c20c.chunk.js","sourcesContent":["export const TypographySize = {\r\n  large: 'large',\r\n  medium: 'medium',\r\n  small: 'small',\r\n};\r\n","import React from 'react';\r\nimport { TypographySize } from '../../enums/enums';\r\nimport styled from 'styled-components';\r\n\r\nconst getSize = (size) => {\r\n  switch (size) {\r\n    case TypographySize.small:\r\n      return `font-size: 16px `;\r\n    case TypographySize.medium:\r\n      return `font-size: 26px `;\r\n    case TypographySize.large:\r\n      return `font-size: 36px `;\r\n    default:\r\n      return `font-size: 16px `;\r\n  }\r\n};\r\n\r\nconst Heading = styled.h1(({color,size}) => `\r\n  ${getSize(size)};\r\n  color: ${color} ;\r\n`);\r\nexport default function Typography({color,size,label}) {\r\n  return (\r\n    <Heading color={color} size={size} >\r\n      {label}\r\n    </Heading>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Inpout = styled.input`\r\n  display: block;\r\n  width: 250px;\r\n  height: 25px;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  border-radius: 0.85rem;\r\n  border: 0.3px solid;\r\n  border-color: inherit;\r\n  background-color: #fff;\r\n\r\n  &::focus {\r\n    border-color: transparent;\r\n  }\r\n \r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 35px;\r\n  @media  (max-width: 768px) {\r\n    margin: 0;\r\n}\r\n&:focus-within ul{\r\n    display:block;\r\n  }\r\n`;\r\nconst DropDwonListLi=styled.li`\r\nlist-style:none;\r\n    padding: 5px 26px;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    border-bottom: 1px solid;\r\n}\r\n\r\n&:hover{\r\ncursor:pointer;\r\nbackground-color:whitesmoke;\r\n\r\n}`;\r\nconst DropDwonListUl=styled.ul`\r\ndisplay:none;\r\nwidth: 23%;\r\nborder-radius:10px;\r\nposition:absolute;\r\nbackground-color:whitesmoke;\r\noverflow:hidden;\r\nmargin-top:29px;\r\npadding:0;\r\n`;\r\n\r\nexport default function SearchBar({autoComplete,placeholder,value,onChange,selectFromList}) {\r\n  \r\n  const list=autoComplete\r\n  ? autoComplete.map((v,i) => {\r\n    return(\r\n      <DropDwonListLi onMouseDown={()=>selectFromList(v)} key={i}>\r\n        {v.LocalizedName}\r\n      </DropDwonListLi>\r\n    )\r\n\r\n  }) : [];\r\n  return (\r\n    \r\n    <Form>\r\n       \r\n      <Inpout \r\n      placeholder={placeholder} \r\n     value={value} \r\n      onChange={onChange} \r\n      />\r\n      \r\n     <DropDwonListUl> {list} </DropDwonListUl>\r\n    \r\n    </Form>\r\n\r\n           \r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TypographySize } from '../../enums/enums';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst getSize = (size) => {\r\n  switch (size) {\r\n    case TypographySize.small:\r\n      return `font-size: 16px `;\r\n    case TypographySize.medium:\r\n      return `font-size: 26px `;\r\n    case TypographySize.large:\r\n      return `font-size: 36px `;\r\n    default:\r\n      return `font-size: 36px `;\r\n  }\r\n};\r\n\r\nconst Heading = styled.div(\r\n({color,headerSize}) =>`\r\n\r\n  ${getSize(headerSize)};\r\n  color: ${color} ;\r\n  @media (max-width: 768px) {\r\n  flex-direction: column;\r\nalign-items:center;\r\n\r\n}\r\n`);\r\nconst Date = styled.div`\r\n  color: white;\r\n  font-size: 16px;\r\n`;\r\nconst Clocation=styled.div`\r\ndisplay:block;\r\n`;\r\nexport default function Location({country,city,date,size}) {\r\n\r\n\r\n  return (\r\n    <Clocation>\r\n    <Heading color={'white'} headerSize={size} >\r\n      {city},{country}\r\n      <Date>{date}</Date>\r\n    </Heading>\r\n\r\n    </Clocation>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst getFontsize = (fontsize) => {\r\n  switch (fontsize) {\r\n    case 'small':\r\n      return `font-size: 16px `;\r\n    case 'medium':\r\n      return `font-size: 30px `;\r\n    case 'large':\r\n      return `font-size: 45px `;\r\n    default:\r\n      return `font-size: 16px `;\r\n  }\r\n};\r\n\r\nconst Text = styled.div(\r\n  ({ color, fontsize, text, paddingtop, height, width }) => `\r\ncolor: ${color};\r\n${fontsize}\r\ntext: ${text};\r\npadding-top: ${paddingtop};\r\nheight: ${height};\r\nwidth: ${width};\r\n`\r\n);\r\n\r\nconst TextLine = ({ color, fontsize, text, paddingtop, height, width, degree }) => {\r\n  const Degrees = degree ? '°' : '';\r\n  return (\r\n    <Text color={color} fontsize={getFontsize( fontsize) } paddingtop={paddingtop} width={width} height={height}>\r\n      {text}\r\n      {Degrees}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default TextLine;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst IconWeather=styled.img\r\n(({height,width}) => `\r\n\r\nheight:${height};\r\nwidth:${width};\r\n`)\r\n\r\nexport default function Icon({src,width,height}) {\r\n    return (\r\n        <IconWeather\r\n        src={src}\r\n        width={width}\r\n        height={height}\r\n       />\r\n            \r\n       \r\n    )\r\n}\r\n","export const GetDate = (item, type) => {\r\n  const option = {\r\n    longDate: {\r\n      month: 'long',\r\n      day: 'numeric',\r\n      weekday: 'long',\r\n    },\r\n    time: {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    },\r\n    date: {\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    },\r\n  };\r\n\r\n  const longDate = new Date().toLocaleDateString('en-us', option.longDate);\r\n  const objectDate = new Date(item);\r\n  const time = objectDate.toLocaleTimeString('en-us', option.time);\r\n  const date = objectDate.toLocaleDateString('en-us', option.date);\r\n\r\n  switch (type) {\r\n    case 'time':\r\n      return time;\r\n\r\n    case 'date':\r\n      return date;\r\n\r\n    default:\r\n        return longDate;\r\n  }\r\n};\r\nexport const GetIcon=(icon)=>{\r\n  return `http://vortex.accuweather.com/adc2010/images/slate/icons/${icon}.svg`\r\n}\r\nconst Helpers={\r\n    GetDate,GetIcon\r\n}\r\n\r\nexport default Helpers;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextLine from '../TextLine/TextLine'\r\nimport Icon from '../WeatherIcon/Icon'\r\nimport Helpers from '../../helpers/index'\r\n\r\nconst CardTemp = styled.div`\r\n  opacity: 0.4;\r\n  border-radius: 0.85rem;\r\n  background-color: ivory;\r\n  color: #000000;\r\n  font-weight: bold;\r\n  width: 45%;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding-top: 15px;\r\n  @media (max-width: 768px) {\r\n    width: 88%;\r\n    height: 20%;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  width: 100%;\r\n  height: 40%;\r\n  flex-direction: row;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst SLowHight = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\nconst SRainWind = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\nconst SSetRise = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  width: 50%;\r\n  height:1%;\r\n  display: flex;\r\n  color: white;\r\n  justify-content: center;\r\n  padding-top: 40px;\r\n  @media (max-width: 768px) {\r\n    padding: 0;\r\n  }\r\n`;\r\nconst WrapTwo = styled.div`\r\n  display: block;\r\n  height: 20%;\r\n`;\r\nconst Sunset = styled.div`\r\n`;\r\nconst Sunrise = styled.div`\r\n`;\r\nconst Low = styled.div`\r\n`;\r\nconst Wind = styled.div`\r\n`;\r\nconst Rain = styled.div`\r\n`;\r\nconst Hight=styled.div``;\r\nexport default function Card({ CurrentConditions, DaliyForcast }) {\r\n  const rise = (DaliyForcast.DailyForecasts[0]?.Sun.Rise).slice(11, 16);\r\n  const set = (DaliyForcast.DailyForecasts[0]?.Sun.Set).slice(11, 16);\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <Icon src={Helpers.GetIcon(CurrentConditions.WeatherIcon)} width={'37%'} height={'37%'} />\r\n        <WrapTwo>\r\n          <TextLine text={CurrentConditions.Temperature?.Metric.Value} fontsize={'large'} degree />\r\n          <TextLine fontsize={'medium'} height={'20%'} text={CurrentConditions.WeatherText} />\r\n        </WrapTwo>\r\n      </Wrap>\r\n\r\n      <CardTemp>\r\n        <SLowHight>\r\n          <Hight>  \r\n          <TextLine text={DaliyForcast.DailyForecasts[0]?.Temperature.Maximum.Value} degree />\r\n          <TextLine text={'Hight'} />\r\n          </Hight>\r\n          <Low>\r\n          <TextLine text={DaliyForcast.DailyForecasts[0]?.Temperature.Minimum.Value} degree />\r\n          <TextLine text={'Low'} />\r\n          </Low>\r\n        </SLowHight>\r\n\r\n        <SRainWind>\r\n          <Wind>  \r\n          <TextLine text={`${DaliyForcast.DailyForecasts[0].Day.Wind.Speed.Value} mi/h`} />\r\n          <TextLine text={'Wind'} />\r\n          </Wind>\r\n          <Rain> \r\n          <TextLine text={`${DaliyForcast.DailyForecasts[0]?.Day.RainProbability} % `} />\r\n          <TextLine text={'Rain'} />\r\n          </Rain>\r\n        </SRainWind>\r\n\r\n        <SSetRise>\r\n          <Sunrise> \r\n          <TextLine text={rise} />\r\n          <TextLine text={'Sunrise'} />\r\n          </Sunrise>\r\n          <Sunset>  \r\n          <TextLine text={set} />\r\n          <TextLine text={'Sunset'} />\r\n          </Sunset>\r\n        </SSetRise>\r\n      </CardTemp>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Icon from '../WeatherIcon/Icon';\r\nimport TextLine from '../TextLine/TextLine';\r\n\r\nconst Card = styled.div`\r\n  opacity: 0.4;\r\n  border-radius: 0.85rem;\r\n  background-color: #ffffff;\r\n  color: #000000;\r\n  font-weight: bold;\r\n  height: 19vh;\r\n  width: 90px;\r\n  text-align: center;\r\n  margin: 3px;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    align-items: center;\r\n  }\r\n`;\r\nconst Date = styled.span`\r\n  font-size: 12px;\r\n  display: block;\r\n`;\r\n\r\nexport default function ForcastCard({ date, time, icon, temperatura }) {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Date>{date}</Date>\r\n        <Date>{time} </Date>\r\n        <Icon src={icon} width={'6vw'} height={'7vh'} />\r\n        <TextLine text={temperatura} degree />\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport ForcastCard from '../ForcastCard/ForcastCard'\r\nimport styled from 'styled-components';\r\nimport Helpers from '../../helpers/index'\r\nconst Container = styled.div`\r\ndisplay:flex;\r\npadding-top: 20px;\r\njustify-content: center;\r\n  @media (max-width: 768px) {\r\n    overflow-x: scroll;\r\n    display: flex;\r\n    padding-top: 90px;\r\n}\r\n`\r\nexport default function ForecastList({HoursfHourly12}) {\r\n \r\n\r\n  return (\r\n    <Container>\r\n      {HoursfHourly12.map((item, index) => {\r\n        \r\n        return (\r\n       \r\n          <div key={index}>\r\n            <ForcastCard  \r\n            date={Helpers.GetDate(item.DateTime,'date')}\r\n            time={Helpers.GetDate(item.DateTime,'time') }\r\n            icon={Helpers.GetIcon(  item.WeatherIcon )}\r\n            temperatura={item.Temperature.Value}\r\n            />\r\n            \r\n          </div>\r\n        );\r\n      })}\r\n      </Container>\r\n  );\r\n}\r\n","const api='6uR5fLQNdlMXg2sSM0nwCAzg1gGoAGvy'\r\nexport const baseURL={\r\n    AutoCompleteListURL:`https://dataservice.accuweather.com/locations/v1/cities/autocomplete`,\r\n    DaliyForcastURL:`https://dataservice.accuweather.com/forecasts/v1/daily/1day/`,\r\n    HoursfHourly12URL:`https://dataservice.accuweather.com/forecasts/v1/hourly/12hour/`,\r\n    CurrentConditionsURL :`https://dataservice.accuweather.com/currentconditions/v1/ `\r\n}\r\n\r\nexport const endPoints ={\r\n  searchpoint:`?apikey=${api}&q=`,\r\n  endPoints:`?apikey=${api}&details=true&metric=true`\r\n}","import axios from 'axios'\r\nimport {baseURL,endPoints} from '../url/url'\r\n\r\nexport const getAutoCompleteList = (input) =>\r\naxios.get(baseURL.AutoCompleteListURL+endPoints.searchpoint+input);\r\n\r\nexport const getDaliyForcast = (Key) =>\r\naxios.get(baseURL.DaliyForcastURL+Key+endPoints.endPoints)\r\n\r\nexport const getCurrentConditions = (Key) =>\r\naxios.get(baseURL.CurrentConditionsURL+Key+endPoints.endPoints);\r\n\r\nexport const get12HoursfHourly = (Key) =>\r\naxios.get(baseURL.HoursfHourly12URL+Key+endPoints.endPoints);","import React, { useState } from 'react';\r\nimport Typography from '../components/Typography/Typography';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport Location from '../components/Location/Location';\r\nimport Card from '../components/Card/Card';\r\nimport ForecastList from '../components/ForecastList/ForecastList';\r\nimport Helpers from '../helpers/index'\r\nimport { getAutoCompleteList, get12HoursfHourly, getCurrentConditions, getDaliyForcast } from '../Api/index';\r\nimport styled from 'styled-components';\r\n\r\nconst CweatherPage=styled.div`\r\nmargin:0;\r\n`;\r\n\r\nexport default function WeatherPage() {\r\n \r\n  const [autoComplete, setAutoComplete] = useState([]);\r\n  const [selectValue, setselectValue] = useState('');\r\n  const [HoursfHourly12, setHoursfHourly12] = useState({});\r\n  const [CurrentConditions, setCurrentConditions] = useState({});\r\n  const [DaliyForcast, setDaliyForcast] = useState({});\r\n  const [isfinished, setIsfinished] = useState(false);\r\n  const [pickLoction, setpickLoction] = useState({})\r\n\r\n  const onChange = async (e) => {\r\n    setselectValue(e.target.value);\r\n    const result = await getAutoCompleteList(e.target.value);\r\n    setAutoComplete(result.data);\r\n  \r\n  };\r\n\r\n  const Hours_fHourly = async (Key) => {\r\n    const result = await get12HoursfHourly(Key);\r\n    setHoursfHourly12(result.data);\r\n  };\r\n\r\n  const Daliy_Forcast = async (Key) => {\r\n    const result = await getDaliyForcast(Key);\r\n    setDaliyForcast(result.data);\r\n  };\r\n  \r\n  const Conditions = async (Key) => {\r\n    const result = await getCurrentConditions(Key);\r\n    setCurrentConditions(result.data[0]);\r\n  };\r\n\r\n  const selectFromList = async (v) => {\r\n     await Daliy_Forcast(v.Key);\r\n    await Hours_fHourly(v.Key);\r\n   await  Conditions(v.Key);\r\n    setselectValue(v.LocalizedName);\r\n    setpickLoction(v);\r\n    setIsfinished(true)\r\n  };\r\n \r\n  return (\r\n    <CweatherPage>\r\n      <Typography color={'white'} label={'Weather-app'} />\r\n      <SearchBar\r\n       placeholder={'Search your country'}\r\n       autoComplete={autoComplete} \r\n       onChange={onChange}\r\n        value={selectValue}\r\n        selectFromList={selectFromList}\r\n        />\r\n        \r\n        {isfinished ? (\r\n         <>\r\n            <Location\r\n            city={pickLoction.LocalizedName}\r\n            country={pickLoction.Country.ID}\r\n            date={Helpers.GetDate()}\r\n            />\r\n      <Card DaliyForcast={DaliyForcast}  CurrentConditions={CurrentConditions}/> \r\n       <ForecastList HoursfHourly12={HoursfHourly12}/>\r\n         </>\r\n         \r\n        ) :[]  }\r\n    \r\n      \r\n    </CweatherPage>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/homePagebj.f29a4dc3.jpg\";","import React from 'react';\r\nimport HomePage from './page/HomePage';\r\nimport styled from 'styled-components';\r\nimport image from './assets/images/homePagebj.jpg';\r\n\r\nconst Container = styled.div`\r\n  background: url(${image}) center;\r\n  width: 98vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  @media  (max-width: 768px) {\r\n  flex-direction: column;\r\n  align-items:center;\r\n}\r\n`;\r\nfunction App() {\r\n  return (\r\n\r\n    <Container>\r\n      <HomePage />\r\n    </Container>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}