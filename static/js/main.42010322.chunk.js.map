{"version":3,"sources":["config/typography.js","components/Typography/Typography.js","components/SearchBar/SearchBar.js","components/Location/Location.js","components/TextLine/TextLine.js","components/WeatherIcon/Icon.js","Helpers/Index.js","components/Card/Card.js","components/ForcastCard/ForcastCard.jsx","components/ForecastList/ForecastList.js","url/url.js","Api/index.js","pages/WeatherPage.js","assets/images/homePagebj.jpg","App.js","index.js"],"names":["TypographySize","Heading","styled","h1","color","size","getSize","Typography","label","Inpout","input","Form","form","DropDwonListLi","li","DropDwonListUl","ul","SearchBar","autoComplete","placeholder","value","onChange","selectFromList","list","map","v","i","onMouseDown","LocalizedName","div","headerSize","Date","Clocation","Location","country","city","date","getFontsize","fontsize","Text","text","paddingtop","height","width","TextLine","Degrees","degree","IconWeather","img","Icon","src","Helpers","GetDate","item","type","option","month","day","weekday","hour","minute","longDate","toLocaleDateString","objectDate","time","toLocaleTimeString","GetIcon","icon","CardTemp","Container","DivOne","DivTwo","DivThree","Wrap","WrapTwo","Card","CurrentConditions","DaliyForcast","rise","DailyForecasts","Sun","Rise","slice","set","Set","WeatherIcon","Temperature","Metric","Value","WeatherText","Maximum","Minimum","Day","Wind","Speed","RainProbability","span","ForcastCard","temperatura","ForecastList","HoursfHourly12","index","DateTime","baseURL","endPoints","process","getDaliyForcast","Key","axios","get","getCurrentConditions","get12HoursfHourly","CweatherPage","WeatherPage","useState","setAutoComplete","selectValue","setselectValue","setHoursfHourly12","setCurrentConditions","setDaliyForcast","isfinished","setIsfinished","pickLoction","setpickLoction","e","a","target","result","data","Hours_fHourly","Daliy_Forcast","Conditions","console","log","Country","ID","image","App","ReactDOM","render","document","getElementById"],"mappings":"gMAAaA,EACJ,QADIA,EAEH,SAFGA,EAGJ,Q,OCcHC,EAAUC,IAAOC,IAAG,gBAAEC,EAAF,EAAEA,MAAMC,EAAR,EAAQA,KAAR,oBAbV,SAACA,GACf,OAAQA,GACN,KAAKL,EACH,MAAM,mBACR,KAAKA,EACH,MAAM,mBACR,KAAKA,EACH,MAAM,mBACR,QACE,MAAM,oBAKRM,CAAQD,GADc,uBAEfD,EAFe,WAIX,SAASG,EAAT,GAAyC,IAApBH,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,KAAKG,EAAQ,EAARA,MAC7C,OACE,cAACP,EAAD,CAASG,MAAOA,EAAOC,KAAMA,EAA7B,SACGG,I,whCCpBP,IAAMC,EAASP,IAAOQ,MAAV,KAgBNC,EAAOT,IAAOU,KAAV,KAWJC,EAAeX,IAAOY,GAAR,KAadC,EAAeb,IAAOc,GAAR,KAWL,SAASC,EAAT,GAA8E,IAA1DC,EAAyD,EAAzDA,aAAaC,EAA4C,EAA5CA,YAAYC,EAAgC,EAAhCA,MAAMC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,eAEnEC,EAAKL,EACTA,EAAaM,KAAI,SAACC,EAAEC,GACpB,OACE,cAACb,EAAD,CAAgBc,YAAa,kBAAIL,EAAeG,IAAhD,SACGA,EAAEG,eADoDF,MAKxD,GACL,OAEE,eAACf,EAAD,WAEE,cAACF,EAAD,CACAU,YAAaA,EACdC,MAAOA,EACNC,SAAUA,IAGX,eAACN,EAAD,eAAkBQ,EAAlB,U,mMCvEL,IAaMtB,EAAUC,IAAO2B,KACvB,gBAAEzB,EAAF,EAAEA,MAAM0B,EAAR,EAAQA,WAAR,sBAdgB,SAACzB,GACf,OAAQA,GACN,KAAKL,EACH,MAAM,mBACR,KAAKA,EACH,MAAM,mBACR,KAAKA,EAEL,QACE,MAAM,oBAORM,CAAQwB,GAFZ,uBAGW1B,EAHX,+FAUM2B,EAAO7B,IAAO2B,IAAV,KAIJG,EAAU9B,IAAO2B,IAAR,KAGA,SAASI,EAAT,GAA6C,IAA1BC,EAAyB,EAAzBA,QAAQC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,KAAK/B,EAAO,EAAPA,KAGlD,OACE,cAAC2B,EAAD,UACA,eAAC,EAAD,CAAS5B,MAAO,QAAS0B,WAAYzB,EAArC,UACG8B,EADH,IACUD,EACR,cAAC,EAAD,UAAOE,SCvCb,IAAMC,EAAc,SAACC,GACnB,OAAQA,GACN,IAAK,QACH,MAAM,mBACR,IAAK,SACH,MAAM,mBACR,IAAK,QACH,MAAM,mBACR,QACE,MAAM,qBAINC,EAAOrC,IAAO2B,KAClB,gBAAGzB,EAAH,EAAGA,MAAOkC,EAAV,EAAUA,SAAUE,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,WAAYC,EAAtC,EAAsCA,OAAQC,EAA9C,EAA8CA,MAA9C,yBACOvC,EADP,cAEAkC,EAFA,mBAGME,EAHN,2BAIaC,EAJb,sBAKQC,EALR,qBAMOC,EANP,UAoBaC,EAVE,SAAC,GAAkE,IAAhExC,EAA+D,EAA/DA,MAAOkC,EAAwD,EAAxDA,SAAUE,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,MACvDE,EAD2E,EAAbC,OAC3C,OAAM,GAC/B,OACE,eAACP,EAAD,CAAMnC,MAAOA,EAAOkC,SAAUD,EAAaC,GAAYG,WAAYA,EAAYE,MAAOA,EAAOD,OAAQA,EAArG,UACGF,EACAK,MC7BDE,EAAY7C,IAAO8C,KACxB,gBAAEN,EAAF,EAAEA,OAAOC,EAAT,EAASA,MAAT,2BAEQD,EAFR,oBAGOC,EAHP,UAMc,SAASM,EAAT,GAAmC,IAApBC,EAAmB,EAAnBA,IAAIP,EAAe,EAAfA,MAAMD,EAAS,EAATA,OACpC,OACI,cAACK,EAAD,CACAG,IAAKA,EACLP,MAAOA,EACPD,OAAQA,IChBT,IAwCQS,EAJD,CACVC,QArCmB,SAACC,EAAMC,GAC5B,IAAMC,EACM,CACRC,MAAO,OACPC,IAAK,UACLC,QAAS,QAJPH,EAME,CACJI,KAAM,UACNC,OAAQ,WARNL,EAUE,CACJC,MAAO,UACPC,IAAK,WAIHI,GAAW,IAAI9B,MAAO+B,mBAAmB,QAASP,GAClDQ,EAAa,IAAIhC,KAAKsB,GACtBW,EAAOD,EAAWE,mBAAmB,QAASV,GAC9CnB,EAAO2B,EAAWD,mBAAmB,QAASP,GAEpD,OAAQD,GACN,IAAK,OACH,OAAOU,EAET,IAAK,OACH,OAAO5B,EAET,QACI,OAAOyB,IAOHK,QAJS,SAACC,GACpB,MAAM,4DAAN,OAAmEA,EAAnE,U,qjDC5BF,IAAMC,EAAWlE,IAAO2B,IAAV,KAmBRwC,EAAYnE,IAAO2B,IAAV,KAcTyC,EAASpE,IAAO2B,IAAV,KAMN0C,EAASrE,IAAO2B,IAAV,KAMN2C,EAAWtE,IAAO2B,IAAV,KAQR4C,EAAKvE,IAAO2B,IAAR,KASJ6C,EAAQxE,IAAO2B,IAAR,KAIE,SAAS8C,EAAT,GAAiD,IAAD,YAAjCC,EAAiC,EAAjCA,kBAAkBC,EAAe,EAAfA,aAC3CC,GAAK,UAAED,EAAaE,eAAe,UAA9B,aAAE,EAAgCC,IAAIC,MAAMC,MAAM,GAAG,IAC1DC,GAAI,UAAEN,EAAaE,eAAe,UAA9B,aAAE,EAAgCC,IAAII,KAAKF,MAAM,GAAG,IAC3D,OAEE,eAACb,EAAD,WACG,eAACI,EAAD,WACD,cAACxB,EAAD,CACFC,IAAKC,EAAQe,QAASU,EAAkBS,aACxC1C,MAAO,OACPD,OAAQ,SAER,eAACgC,EAAD,WACA,cAAC,EAAD,CACAlC,KAAI,UAAEoC,EAAkBU,mBAApB,aAAE,EAA+BC,OAAOC,MAC5ClD,SAAU,QACVQ,QAAM,IAEN,cAAC,EAAD,CACAR,SAAU,SACVI,OAAQ,OACRF,KAAOoC,EAAkBa,oBAMvB,eAACrB,EAAD,WACE,eAACE,EAAD,WACE,cAAC,EAAD,CAAU9B,KAAI,UAAEqC,EAAaE,eAAe,UAA9B,aAAE,EAAgCO,YAAYI,QAAQF,MAAS1C,QAAM,IACnF,cAAC,EAAD,CAAUN,KAAM,UAChB,cAAC,EAAD,CAAWA,KAAI,UAAEqC,EAAaE,eAAe,UAA9B,aAAE,EAAgCO,YAAYK,QAAQH,MAAS1C,QAAM,IACpF,cAAC,EAAD,CAAUN,KAAM,WAGlB,eAAC+B,EAAD,WACE,cAAC,EAAD,CAAU/B,KAAI,UAAKqC,EAAaE,eAAe,GAAGa,IAAIC,KAAKC,MAAMN,MAAnD,WACd,cAAC,EAAD,CAAUhD,KAAM,SAChB,cAAC,EAAD,CAAUA,KAAI,oBAAKqC,EAAaE,eAAe,UAAjC,aAAK,EAAgCa,IAAIG,gBAAzC,SACd,cAAC,EAAD,CAAUvD,KAAM,YAGlB,eAACgC,EAAD,WACE,cAAC,EAAD,CAAUhC,KAAMsC,IAChB,cAAC,EAAD,CAAUtC,KAAM,YAChB,cAAC,EAAD,CAAUA,KAAM2C,IAChB,cAAC,EAAD,CAAU3C,KAAM,oB,qeChH1B,IAAMmC,GAAOzE,IAAO2B,IAAV,MAiBJE,GAAO7B,IAAO8F,KAAV,MA0BKC,OAlBf,YAAoD,IAA9B7D,EAA6B,EAA7BA,KAAK4B,EAAwB,EAAxBA,KAAKG,EAAmB,EAAnBA,KAAK+B,EAAc,EAAdA,YACjC,OACI,mCAEK,eAAC,GAAD,WACC,cAAC,GAAD,UAAO9D,IACP,eAAC,GAAD,WAAO4B,EAAP,QACC,cAACf,EAAD,CACEC,IAAMiB,EACLxB,MAAO,MACPD,OAAQ,QAEZ,cAAC,EAAD,CAAUF,KAAM0D,EAAapD,QAAM,U,mNCvCjD,IAAMuB,GAAYnE,IAAO2B,IAAV,MASA,SAASsE,GAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,eAGpC,OACE,cAAC,GAAD,UACGA,EAAe5E,KAAI,SAAC6B,EAAMgD,GAEzB,OAEE,8BACE,cAAC,GAAD,CACAjE,KAAMe,EAAQC,QAAQC,EAAKiD,SAAS,QACpCtC,KAAMb,EAAQC,QAAQC,EAAKiD,SAAS,QACpCnC,KAAMhB,EAAQe,QAAUb,EAAKgC,aAC7Ba,YAAa7C,EAAKiC,YAAYE,SALtBa,Q,uBCtBPE,GACW,sEADXA,GAEO,8DAFPA,GAGS,iEAHTA,GAIW,4DAGXC,GACC,WAAD,OAAYC,mCAAZ,OADAD,GAED,WAAD,OAAYC,mCAAZ,6BCHEC,GAAkB,SAACC,GAAD,OAC/BC,KAAMC,IAAIN,GAAwBI,EAAIH,KAEzBM,GAAuB,SAACH,GAAD,OACpCC,KAAMC,IAAIN,GAA6BI,EAAIH,KAE9BO,GAAoB,SAACJ,GAAD,OACjCC,KAAMC,IAAIN,GAA0BI,EAAIH,K,oFCHxC,IAAMQ,GAAa9G,IAAO2B,IAAR,MAIH,SAASoF,KAAe,IAAD,EAEIC,mBAAS,IAFb,mBAE7BhG,EAF6B,KAEfiG,EAFe,OAGED,mBAAS,IAHX,mBAG7BE,EAH6B,KAGhBC,EAHgB,OAIQH,mBAAS,IAJjB,mBAI7Bd,EAJ6B,KAIbkB,EAJa,OAKcJ,mBAAS,IALvB,mBAK7BtC,EAL6B,KAKV2C,EALU,OAMIL,mBAAS,IANb,mBAM7BrC,EAN6B,KAMf2C,EANe,OAOAN,oBAAS,GAPT,mBAO7BO,EAP6B,KAOjBC,EAPiB,OAQER,mBAAS,IARX,mBAQ7BS,EAR6B,KAQhBC,EARgB,KAU9BvG,EAAQ,uCAAG,WAAOwG,GAAP,eAAAC,EAAA,6DACfT,EAAeQ,EAAEE,OAAO3G,OADT,SDrBiBV,ECuBSmH,EAAEE,OAAO3G,MDtBtDwF,KAAMC,IAAIN,GAA4BC,GAAsB9F,GCoBzC,OAETsH,EAFS,OAGfb,EAAgBa,EAAOC,MAHR,iCDrBgB,IAACvH,ICqBjB,OAAH,sDAORwH,EAAa,uCAAG,WAAOvB,GAAP,eAAAmB,EAAA,sEACCf,GAAkBJ,GADnB,OACdqB,EADc,OAEpBV,EAAkBU,EAAOC,MAFL,2CAAH,sDAKbE,EAAa,uCAAG,WAAOxB,GAAP,eAAAmB,EAAA,sEACCpB,GAAgBC,GADjB,OACdqB,EADc,OAEpBR,EAAgBQ,EAAOC,MAFH,2CAAH,sDAKbG,EAAU,uCAAG,WAAOzB,GAAP,eAAAmB,EAAA,sEACIhB,GAAqBH,GADzB,OACXqB,EADW,OAEjBT,EAAqBS,EAAOC,KAAK,IAFhB,2CAAH,sDAKV3G,EAAc,uCAAG,WAAOG,GAAP,SAAAqG,EAAA,sEACdK,EAAc1G,EAAEkF,KADF,uBAEfuB,EAAczG,EAAEkF,KAFD,uBAGfyB,EAAW3G,EAAEkF,KAHE,OAIrBU,EAAe5F,EAAEG,eACjBgG,EAAenG,GACfiG,GAAc,GANO,2CAAH,sDAcpB,OANAW,QAAQC,IAAI,kBAAkBpH,GAC9BmH,QAAQC,IAAI,iBAAiBlB,GAC7BiB,QAAQC,IAAI,oBAAoBlC,GAChCiC,QAAQC,IAAI,uBAAuB1D,GACnCyD,QAAQC,IAAI,kBAAkBzD,GAC9BwD,QAAQC,IAAI,iBAAiBX,GAE3B,eAACX,GAAD,WACE,cAACzG,EAAD,CAAYH,MAAO,QAASI,MAAO,gBACnC,cAACS,EAAD,CACCE,YAAa,sBACbD,aAAcA,EACdG,SAAUA,EACTD,MAAOgG,EACP9F,eAAgBA,IAGfmG,EACA,qCACG,cAACxF,EAAD,CACAE,KAAMwF,EAAY/F,cAClBM,QAASyF,EAAYY,QAAQC,GAC7BpG,KAAMe,EAAQC,YAEpB,cAACuB,EAAD,CAAME,aAAcA,EAAeD,kBAAmBA,IACrD,cAACuB,GAAD,CAAcC,eAAgBA,OAG1B,MClFI,WAA0B,uC,kRCKzC,IAAM/B,GAAYnE,IAAO2B,IAAV,KACW4G,IAqBXC,OAVf,WACE,OAEE,cAAC,GAAD,UACE,cAACzB,GAAD,OChBN0B,IAASC,OAEL,cAAC,GAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.42010322.chunk.js","sourcesContent":["export const TypographySize = {\r\n  large: 'large',\r\n  medium: 'medium',\r\n  small: 'small',\r\n};\r\n","import React from 'react';\r\nimport { TypographySize } from '../../config/typography';\r\nimport styled from 'styled-components';\r\n\r\nconst getSize = (size) => {\r\n  switch (size) {\r\n    case TypographySize.small:\r\n      return `font-size: 16px `;\r\n    case TypographySize.medium:\r\n      return `font-size: 26px `;\r\n    case TypographySize.large:\r\n      return `font-size: 36px `;\r\n    default:\r\n      return `font-size: 16px `;\r\n  }\r\n};\r\n\r\nconst Heading = styled.h1(({color,size}) => `\r\n  ${getSize(size)};\r\n  color: ${color} ;\r\n`);\r\nexport default function Typography({color,size,label}) {\r\n  return (\r\n    <Heading color={color} size={size} >\r\n      {label}\r\n    </Heading>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Inpout = styled.input`\r\n  display: block;\r\n  width: 250px;\r\n  height: 25px;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  border-radius: 0.85rem;\r\n  border: 0.3px solid;\r\n  border-color: inherit;\r\n  background-color: #fff;\r\n\r\n  &::focus {\r\n    border-color: transparent;\r\n  }\r\n \r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 35px;\r\n  @media  (max-width: 768px) {\r\n    margin: 0;\r\n}\r\n&:focus-within ul{\r\n    display:block;\r\n  }\r\n`;\r\nconst DropDwonListLi=styled.li`\r\nlist-style:none;\r\n    padding: 5px 26px;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    border-bottom: 1px solid;\r\n}\r\n\r\n&:hover{\r\ncursor:pointer;\r\nbackground-color:whitesmoke;\r\n\r\n}`;\r\nconst DropDwonListUl=styled.ul`\r\ndisplay:none;\r\nwidth: 23vw;\r\nborder-radius:10px;\r\nposition:absolute;\r\nbackground-color:whitesmoke;\r\noverflow:hidden;\r\nmargin-top:29px;\r\npadding:0;\r\n`;\r\n\r\nexport default function SearchBar({autoComplete,placeholder,value,onChange,selectFromList}) {\r\n  \r\n  const list=autoComplete\r\n  ? autoComplete.map((v,i) => {\r\n    return(\r\n      <DropDwonListLi onMouseDown={()=>selectFromList(v)} key={i}>\r\n        {v.LocalizedName}\r\n      </DropDwonListLi>\r\n    )\r\n\r\n  }) : [];\r\n  return (\r\n    \r\n    <Form>\r\n       \r\n      <Inpout \r\n      placeholder={placeholder} \r\n     value={value} \r\n      onChange={onChange} \r\n      />\r\n      \r\n     <DropDwonListUl> {list} </DropDwonListUl>\r\n    \r\n    </Form>\r\n\r\n           \r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TypographySize } from '../../config/typography';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst getSize = (size) => {\r\n  switch (size) {\r\n    case TypographySize.small:\r\n      return `font-size: 16px `;\r\n    case TypographySize.medium:\r\n      return `font-size: 26px `;\r\n    case TypographySize.large:\r\n      return `font-size: 36px `;\r\n    default:\r\n      return `font-size: 36px `;\r\n  }\r\n};\r\n\r\nconst Heading = styled.div(\r\n({color,headerSize}) =>`\r\n\r\n  ${getSize(headerSize)};\r\n  color: ${color} ;\r\n  @media (max-width: 768px) {\r\n  flex-direction: column;\r\nalign-items:center;\r\n\r\n}\r\n`);\r\nconst Date = styled.div`\r\n  color: white;\r\n  font-size: 16px;\r\n`;\r\nconst Clocation=styled.div`\r\ndisplay:block;\r\n`;\r\nexport default function Location({country,city,date,size}) {\r\n\r\n\r\n  return (\r\n    <Clocation>\r\n    <Heading color={'white'} headerSize={size} >\r\n      {city},{country}\r\n      <Date>{date}</Date>\r\n    </Heading>\r\n\r\n    </Clocation>\r\n  );\r\n\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst getFontsize = (fontsize) => {\r\n  switch (fontsize) {\r\n    case 'small':\r\n      return `font-size: 16px `;\r\n    case 'medium':\r\n      return `font-size: 30px `;\r\n    case 'large':\r\n      return `font-size: 45px `;\r\n    default:\r\n      return `font-size: 16px `;\r\n  }\r\n};\r\n\r\nconst Text = styled.div(\r\n  ({ color, fontsize, text, paddingtop, height, width }) => `\r\ncolor: ${color};\r\n${fontsize}\r\ntext: ${text};\r\npadding-top: ${paddingtop};\r\nheight: ${height};\r\nwidth: ${width};\r\n`\r\n);\r\n\r\nconst TextLine = ({ color, fontsize, text, paddingtop, height, width, degree }) => {\r\n  const Degrees = degree ? '°' : '';\r\n  return (\r\n    <Text color={color} fontsize={getFontsize( fontsize) } paddingtop={paddingtop} width={width} height={height}>\r\n      {text}\r\n      {Degrees}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default TextLine;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst IconWeather=styled.img\r\n(({height,width}) => `\r\n\r\nheight:${height};\r\nwidth:${width};\r\n`)\r\n\r\nexport default function Icon({src,width,height}) {\r\n    return (\r\n        <IconWeather\r\n        src={src}\r\n        width={width}\r\n        height={height}\r\n       />\r\n            \r\n       \r\n    )\r\n}\r\n","export const GetDate = (item, type) => {\r\n  const option = {\r\n    longDate: {\r\n      month: 'long',\r\n      day: 'numeric',\r\n      weekday: 'long',\r\n    },\r\n    time: {\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n    },\r\n    date: {\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    },\r\n  };\r\n\r\n  const longDate = new Date().toLocaleDateString('en-us', option.longDate);\r\n  const objectDate = new Date(item);\r\n  const time = objectDate.toLocaleTimeString('en-us', option.time);\r\n  const date = objectDate.toLocaleDateString('en-us', option.date);\r\n\r\n  switch (type) {\r\n    case 'time':\r\n      return time;\r\n\r\n    case 'date':\r\n      return date;\r\n\r\n    default:\r\n        return longDate;\r\n  }\r\n};\r\nexport const GetIcon=(icon)=>{\r\n  return `http://vortex.accuweather.com/adc2010/images/slate/icons/${icon}.svg`\r\n}\r\nconst Helpers={\r\n    GetDate,GetIcon\r\n}\r\n\r\nexport default Helpers;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TextLine from '../TextLine/TextLine'\r\nimport Icon from '../WeatherIcon/Icon'\r\nimport Helpers from '../../Helpers/Index'\r\n\r\nconst CardTemp = styled.div`\r\n\r\n opacity: 0.4;\r\n    border-radius: 0.85rem;\r\n    background-color: ivory;\r\n    color: #000000;\r\n    font-weight: bold;\r\n    height: 25vh;\r\n    width: 45vw;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content:space-around;\r\n    padding-top: 15px;\r\n  @media (max-width: 768px) {\r\n    width: 88vw;\r\n    height: 20vh;\r\n    margin: 0;\r\n  }\r\n`;\r\nconst Container = styled.div`\r\n margin-top:10px;\r\n       display: flex;\r\n    width: 100vw;\r\n    height: 40vh;\r\n    flex-direction: row;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n \r\nmargin:0;\r\n}`;\r\n\r\nconst DivOne = styled.div`\r\n    Height: 20vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`;\r\nconst DivTwo = styled.div`\r\n Height: 20vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`;\r\nconst DivThree = styled.div`\r\n  Height: 20vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 5vw;\r\n`;\r\n\r\nconst Wrap=styled.div`\r\n    width: 50vw;\r\n    display: flex;\r\n    color:white;\r\n    justify-content: center;\r\n    padding-top: 40px;\r\n    @media (max-width: 768px) {\r\npadding:0;\r\n}`;\r\nconst WrapTwo=styled.div`\r\ndisplay:block;\r\nheight:20vh;\r\n`;\r\nexport default function Card({CurrentConditions,DaliyForcast}) {\r\n let rise=( DaliyForcast.DailyForecasts[0]?.Sun.Rise).slice(11,16)\r\n let set=( DaliyForcast.DailyForecasts[0]?.Sun.Set).slice(11,16)\r\n  return (\r\n  \r\n    <Container>\r\n       <Wrap> \r\n      <Icon\r\n    src={Helpers.GetIcon( CurrentConditions.WeatherIcon)}\r\n    width={'20vw'}\r\n    height={'20vh'}\r\n    />\r\n    <WrapTwo> \r\n    <TextLine\r\n    text={CurrentConditions.Temperature?.Metric.Value}\r\n    fontsize={'large'}\r\n    degree\r\n    /> \r\n    <TextLine\r\n    fontsize={'medium'}\r\n    height={'10vh'}\r\n    text= {CurrentConditions.WeatherText}\r\n    />\r\n\r\n    </WrapTwo>\r\n    </Wrap>\r\n\r\n      <CardTemp>\r\n        <DivOne>\r\n          <TextLine text={DaliyForcast.DailyForecasts[0]?.Temperature.Maximum.Value}   degree />\r\n          <TextLine text={'Hight'} />\r\n          <TextLine  text={DaliyForcast.DailyForecasts[0]?.Temperature.Minimum.Value}   degree />\r\n          <TextLine text={'Low'}/>\r\n        </DivOne>\r\n\r\n        <DivTwo>\r\n          <TextLine text={`${DaliyForcast.DailyForecasts[0].Day.Wind.Speed.Value} mi/h`}  />\r\n          <TextLine text={'Wind'} />\r\n          <TextLine text={`${DaliyForcast.DailyForecasts[0]?.Day.RainProbability } % `}/>\r\n          <TextLine text={'Rain'} />\r\n        </DivTwo>\r\n\r\n        <DivThree>\r\n          <TextLine text={rise} />\r\n          <TextLine text={'Sunrise'} />\r\n          <TextLine text={set}/>\r\n          <TextLine text={'Sunset'} />\r\n        </DivThree>\r\n      </CardTemp>\r\n  \r\n    </Container>\r\n   \r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n import Icon from '../WeatherIcon/Icon'\r\nimport TextLine from '../TextLine/TextLine'\r\n\r\n\r\nconst Card = styled.div`\r\n  opacity: 0.4;\r\n  border-radius: 0.85rem;\r\n  background-color: #ffffff;\r\n  color: #000000;\r\n  font-weight: bold;\r\n  height: 19vh;\r\n    width: 90px;\r\n  text-align: center;\r\n  margin: 3px;\r\n  @media (max-width: 768px) {\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    align-items: center;\r\n  }\r\n`;\r\nconst Date = styled.span`\r\nfont-size: 12px;\r\n  display: block;\r\n`;\r\n\r\n\r\n\r\n\r\nfunction ForcastCard({date,time,icon,temperatura}) {\r\n    return (\r\n        <>\r\n   \r\n             <Card>\r\n              <Date>{date}</Date>\r\n              <Date>{time}  </Date>\r\n               <Icon \r\n                 src= {icon}\r\n                  width={'6vw'}\r\n                  height={'7vh'}\r\n              />\r\n              <TextLine text={temperatura} degree /> \r\n            </Card>\r\n     </>\r\n    )\r\n}\r\n\r\nexport default ForcastCard\r\n","import React from 'react';\r\nimport ForcastCard from '../ForcastCard/ForcastCard'\r\nimport styled from 'styled-components';\r\nimport Helpers from '../../Helpers/Index'\r\nconst Container = styled.div`\r\ndisplay:flex;\r\npadding-top: 65px;\r\n  @media (max-width: 768px) {\r\n    overflow-x: scroll;\r\n    display: flex;\r\n    padding-top: 90px;\r\n}\r\n`\r\nexport default function ForecastList({HoursfHourly12}) {\r\n \r\n\r\n  return (\r\n    <Container>\r\n      {HoursfHourly12.map((item, index) => {\r\n        \r\n        return (\r\n       \r\n          <div key={index}>\r\n            <ForcastCard  \r\n            date={Helpers.GetDate(item.DateTime,'date')}\r\n            time={Helpers.GetDate(item.DateTime,'time') }\r\n            icon={Helpers.GetIcon(  item.WeatherIcon )}\r\n            temperatura={item.Temperature.Value}\r\n            />\r\n            \r\n          </div>\r\n        );\r\n      })}\r\n      </Container>\r\n  );\r\n}\r\n","export const baseURL={\r\n    AutoCompleteListURL:`http://dataservice.accuweather.com/locations/v1/cities/autocomplete`,\r\n    DaliyForcastURL:`http://dataservice.accuweather.com/forecasts/v1/daily/1day/`,\r\n    HoursfHourly12URL:`http://dataservice.accuweather.com/forecasts/v1/hourly/12hour/`,\r\n    CurrentConditionsURL :`http://dataservice.accuweather.com/currentconditions/v1/ `\r\n}\r\n\r\nexport const endPoints ={\r\n  searchpoint:`?apikey=${process.env.REACT_APP_API_KEY}&q=`,\r\n  endPoints:`?apikey=${process.env.REACT_APP_API_KEY}&details=true&metric=true`\r\n}","import axios from 'axios'\r\nimport {baseURL,endPoints} from '../url/url'\r\n\r\nexport const getAutoCompleteList = (input) =>\r\naxios.get(baseURL.AutoCompleteListURL+endPoints.searchpoint+input);\r\n\r\nexport const getDaliyForcast = (Key) =>\r\naxios.get(baseURL.DaliyForcastURL+Key+endPoints.endPoints)\r\n\r\nexport const getCurrentConditions = (Key) =>\r\naxios.get(baseURL.CurrentConditionsURL+Key+endPoints.endPoints);\r\n\r\nexport const get12HoursfHourly = (Key) =>\r\naxios.get(baseURL.HoursfHourly12URL+Key+endPoints.endPoints);","import React, { useState } from 'react';\r\nimport Typography from '../components/Typography/Typography';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport Location from '../components/Location/Location';\r\nimport Card from '../components/Card/Card';\r\nimport ForecastList from '../components/ForecastList/ForecastList';\r\nimport Helpers from '../Helpers/Index'\r\nimport { getAutoCompleteList, get12HoursfHourly, getCurrentConditions, getDaliyForcast } from '../Api/index';\r\nimport styled from 'styled-components';\r\n\r\nconst CweatherPage=styled.div`\r\nmargin:0;\r\n`;\r\n\r\nexport default function WeatherPage() {\r\n \r\n  const [autoComplete, setAutoComplete] = useState([]);\r\n  const [selectValue, setselectValue] = useState('');\r\n  const [HoursfHourly12, setHoursfHourly12] = useState({});\r\n  const [CurrentConditions, setCurrentConditions] = useState({});\r\n  const [DaliyForcast, setDaliyForcast] = useState({});\r\n  const [isfinished, setIsfinished] = useState(false);\r\n  const [pickLoction, setpickLoction] = useState({})\r\n\r\n  const onChange = async (e) => {\r\n    setselectValue(e.target.value);\r\n    const result = await getAutoCompleteList(e.target.value);\r\n    setAutoComplete(result.data);\r\n  \r\n  };\r\n\r\n  const Hours_fHourly = async (Key) => {\r\n    const result = await get12HoursfHourly(Key);\r\n    setHoursfHourly12(result.data);\r\n  };\r\n\r\n  const Daliy_Forcast = async (Key) => {\r\n    const result = await getDaliyForcast(Key);\r\n    setDaliyForcast(result.data);\r\n  };\r\n  \r\n  const Conditions = async (Key) => {\r\n    const result = await getCurrentConditions(Key);\r\n    setCurrentConditions(result.data[0]);\r\n  };\r\n\r\n  const selectFromList = async (v) => {\r\n     await Daliy_Forcast(v.Key);\r\n    await Hours_fHourly(v.Key);\r\n   await  Conditions(v.Key);\r\n    setselectValue(v.LocalizedName);\r\n    setpickLoction(v);\r\n    setIsfinished(true)\r\n  };\r\n  console.log('autoComplete  :',autoComplete);\r\n  console.log('selectValue   ',selectValue);\r\n  console.log('HoursfHourly12  :',HoursfHourly12);\r\n  console.log('CurrentConditions   ',CurrentConditions);\r\n  console.log('DaliyForcast  :',DaliyForcast);\r\n  console.log('pickLoction   ',pickLoction);\r\n  return (\r\n    <CweatherPage>\r\n      <Typography color={'white'} label={'Weather-app'} />\r\n      <SearchBar\r\n       placeholder={'Search your country'}\r\n       autoComplete={autoComplete} \r\n       onChange={onChange}\r\n        value={selectValue}\r\n        selectFromList={selectFromList}\r\n        />\r\n        \r\n        {isfinished ? (\r\n         <>\r\n            <Location\r\n            city={pickLoction.LocalizedName}\r\n            country={pickLoction.Country.ID}\r\n            date={Helpers.GetDate()}\r\n            />\r\n      <Card DaliyForcast={DaliyForcast}  CurrentConditions={CurrentConditions}/> \r\n       <ForecastList HoursfHourly12={HoursfHourly12}/>\r\n         </>\r\n         \r\n        ) :[]  }\r\n    \r\n      \r\n    </CweatherPage>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/homePagebj.f29a4dc3.jpg\";","import React from 'react';\r\nimport WeatherPage from './pages/WeatherPage';\r\nimport styled from 'styled-components';\r\nimport image from './assets/images/homePagebj.jpg';\r\n\r\nconst Container = styled.div`\r\n  background-image: url(${image});\r\n  width: 100vw;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  @media  (max-width: 768px) {\r\n  flex-direction: column;\r\n  align-items:center;\r\n}\r\n`;\r\nfunction App() {\r\n  return (\r\n\r\n    <Container>\r\n      <WeatherPage />\r\n    </Container>\r\n   \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}